# Run test with python3 -m doctest -v tests/7-base_geometry.txt

Module import:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> bg = BaseGeometry()

Check for area():
    >>> print(bg.area())
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

Checks for integer_validator():
    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("age", True)

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer
    
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ...
    ValueError: distance must be greater than 0

    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator("name", (5,))
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    >>> bg.integer_validator("name", [2])
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    >>> bg.integer_validator("name", {3, 4})
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    >>> bg.integer_validator("name", None)
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer